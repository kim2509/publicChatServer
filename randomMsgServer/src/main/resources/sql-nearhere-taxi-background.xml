<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tessoft.nearhere.taxi.background">

	<select id="getAllPosts" parameterType="java.util.HashMap" resultType="com.nearhere.domain.Post">
		select * from post
	</select>

	<update id="updatePostDepartureDateTime" parameterType="com.nearhere.domain.Post">
		update post set departureDateTime=#{departureDateTime} where postID=#{postID}
	</update>
	
	<select id="getPostsNotYetFinished" resultType="com.nearhere.domain.Post">
		<![CDATA[
			select * from post 
			where status <> '종료됨'
			and deletedDate is null
			and type='taxi'
			order by postID desc
			limit 0, 50;
		]]> 	
	</select>
	
	<update id="updatePostAsFinished" parameterType="java.util.List" >
		update post set status='종료됨', finishedBySystem='Y'
		where postID in (
		<foreach item="Post" collection="list" open="" close=""
			separator=",">
			#{Post.postID}
		</foreach>
		)
	</update>
	
	<select id="selectPostsRegionNull" resultType="com.nearhere.domain.Post">
		<![CDATA[
			select * from post
			where region is null
			and type='taxi';
		]]> 	
	</select>
	
	<select id="selectRegionNo" resultType="String" parameterType="String">
		<![CDATA[
			select regionNo from region
			where regionName=#{regionName}
		]]> 	
	</select>
	
	<update id="updatePostRegion" parameterType="com.nearhere.domain.Post">
		<![CDATA[
			update post set region=#{region}
			where postID = #{postID};
		]]> 	
	</update>
	
	<!-- 새 합승내역을 등록한다. -->
	<insert id="insertNewPushJob" parameterType="String">
		insert into push_job( param, pushType, createdDate )
		values ( #{value}, 'newPostByDistance', NOW() );
	</insert>
	
	<!-- 푸쉬 보낼 합승내역을 읽어온다. -->
	<select id="getPushJobList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		<![CDATA[
			select j.*, pr.latitude as fromLatitude, pr.longitude as fromLongitude, pr.address as fromAddress
			, pr2.latitude as latitude, pr2.longitude as longitude, pr2.address as toAddress
			, p.userID, p.postID
			from push_job j
				left outer join post p on p.postID=j.param
				left outer join post_region pr on p.postID=pr.postID and pr.regionName='출발지'
				left outer join post_region pr2 on p.postID=pr2.postID and pr2.regionName='도착지'
			where j.pushType='newPostByDistance'
			and (j.finishYN is null or j.finishYN <> 'Y')
		]]> 	
	</select>
	
	<!-- 새 합승내역이 집이나 회사 근처인 사람들을 읽어오는 쿼리 -->
	<select id="getUserListAroundPost" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		<![CDATA[
			select * from (
				select TRUNCATE((
								6371 * acos ( cos ( radians( #{latitude} )
								)
								* cos( radians( latitude ) )
								* cos( radians( longitude ) -
								radians( #{longitude} ) )
								+ sin ( radians( #{latitude} ) )
								*
								sin( radians( latitude ) )
								)
								) , 1) AS distance, ul.*
				from (
					select l.*, u.regID 
					from user_location l
						left outer join user u on l.userID=u.userID
					where u.isDeleted is null
					and u.regID is not null
					and u.userID <> #{userID}
					and l.latitude > 0 and l.longitude > 0
				) ul
			) A
			where distance < 3
			order by distance
		]]> 	
	</select>
	
	<!-- postID 로 관심지역 등록한 사용자 조회 -->
	<select id="getUserListForFavoriteRegion" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		<![CDATA[
			select u.userID, u.regID, A.regionNo, r.regionName from (
				select r1.userID, r1.regionNo from post_region pr
					left outer join user_favorite_region r1 on r1.regionNo = pr.lRegionNo
				where pr.postID=#{postID}
				and r1.userID is not null
				union
				select r2.userID, r2.regionNo from post_region pr
					left outer join user_favorite_region r2 on r2.regionNo = pr.mRegionNo
				where pr.postID=#{postID}
				and r2.userID is not null
				union
				select r3.userID, r3.regionNo from post_region pr
					left outer join user_favorite_region r3 on r3.regionNo = pr.sRegionNo
				where pr.postID=#{postID}
				and r3.userID is not null
				union
				select r4.userID, r4.regionNo from post_region pr
					left outer join user_favorite_region r4 on r4.regionNo = pr.tRegionNo
				where pr.postID=#{postID}
				and r4.userID is not null
				) A
				 left outer join user u on A.userID = u.userID
				 left outer join region r on A.regionNo=r.regionNo
			where u.regID is not null
		]]> 	
	</select>
	
	<update id="updatePushJobAsFinished" parameterType="java.util.HashMap">
		<![CDATA[
			update push_job set finishYN='Y', finishedDate = NOW()
			where pushID = #{pushID};
		]]> 	
	</update>
	
	<!-- 푸쉬 insert -->
	<insert id="insertNewPostPushData" parameterType="java.util.HashMap"
	useGeneratedKeys="true" keyProperty="ID" keyColumn="ID">
		insert into new_post_push_data( pushID, postID, userID, locationID, locationName, regID, address, message, createdDate )
		values ( #{pushID}, #{postID}, #{userID}, #{locationID}, #{locationName}, #{regID}, #{address}, #{message}, NOW() );
		<selectKey keyProperty="ID" resultType="String" order="AFTER">
			select LAST_INSERT_ID();
		</selectKey>
	</insert>
	
	<!-- 푸쉬 메세지 보낼 대상 및 내역 -->
	<select id="getNewPostPushDataByPushID" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
			select p.* from new_post_push_data p
			where pushID=#{pushID}
			group by userID
		]]>
	</select>
	
	<!-- 푸쉬 메세지 결과 업데이트 -->
	<update id="updateNewPostPushData" parameterType="java.util.HashMap">
		update new_post_push_data set pushResult = #{pushResult}
		where ID = #{ID}
	</update>
	
</mapper>