<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tessoft.nearhere.cafe">

	<select id="getMyCafeList" resultType="HashMap" parameterType="String">
		select cm.*, ci.url1, ci.url2 from cafe_members cm2
			left outer join cafe_master cm on cm.cafeNo=cm2.cafeNo
			left outer join cafe_detail cd on cm.cafeNo=cd.cafeNo
			left outer join cafe_image ci on ci.imageNo = cd.iconImageNo
		where cm2.userID=#{userID};
	</select>
	
	<select id="getUpcomingCafeMeetingList" resultType="HashMap" parameterType="String">
		select cp.*, cm.cafeID, cm.cafeName, cl.regionNo from cafe_public_meeting cp
			left outer join cafe_location cl on cp.locationNo=cl.No
			left outer join cafe_master cm on cp.cafeNo=cm.cafeNo
		where cp.meetingDate >= NOW() 
		order by cp.meetingDate
	</select>
	
	<insert id="makeCafe" parameterType="HashMap"
		useGeneratedKeys="true" keyProperty="cafeNo" keyColumn="cafeNo">
		insert into cafe_master( cafeID, cafeName, owner, createdDate )
		values( #{cafeID}, #{cafeName}, #{userID}, NOW() );
		<selectKey keyProperty="cafeNo" resultType="String" order="AFTER">
			select LAST_INSERT_ID();
		</selectKey>
	</insert>
	
	<select id="getCafeMainInfo" resultType="HashMap" parameterType="HashMap">
		select cm.*, cd.iconImageNo, cd.mainImageNo, cd.mainDesc, ifnull(ci.url1,'') as url1, ifnull(ci.url2,'') as url2
		from cafe_master cm
			left outer join cafe_detail cd on cm.cafeNo=cd.cafeNo
			left outer join cafe_image ci on cd.mainImageNo = ci.imageNo
		where cafeID=#{cafeID}
	</select>
	
	<select id="getCafePublicMeetingList" resultType="HashMap" parameterType="HashMap">
		select cp.*, cm.cafeName, cm.cafeID, cl.regionNo from cafe_public_meeting cp
			left outer join cafe_location cl on cp.locationNo=cl.No
			left outer join cafe_master cm on cp.cafeNo=cm.cafeNo
		where cp.meetingDate >= NOW()
		and cm.cafeID=#{cafeID}
	</select>
	
	<select id="getCafeMeetingInfo" resultType="HashMap" parameterType="HashMap">
		select cm.meetingNo, cm.cafeNo, cm.title, cm.meetingDate, cm.locationNo, ifnull(cm.maxNo, 0 ) as maxNo
			, cmm.curNo
		from cafe_public_meeting cm
			left outer join (select meetingNo, count(userID) as curNo from cafe_public_meeting_members group by meetingNo ) cmm
				on cm.meetingNo = cmm.meetingNo
		where cm.meetingNo=#{meetingNo}
	</select>
	
	<select id="getCafeMeetingMembers" resultType="HashMap" parameterType="HashMap">
		select cm.*, u.userName, u.profileImageURL, cm2.memberType
		from cafe_public_meeting_members cm
			left outer join user u on u.userID=cm.userID
			left outer join cafe_members cm2 on cm.userID=cm2.userID
		where cm.meetingNo=#{meetingNo}
	</select>
	
	<select id="getCafeMemberList" resultType="HashMap" parameterType="HashMap">
		select cfm.*, u.userName, u.profileImageURL from cafe_members cfm
			left outer join user u on cfm.userID=u.userID
			left outer join cafe_master cm on cm.cafeNo=cfm.cafeNo
		where cm.cafeID=#{cafeID}
		order by cfm.createdDate
		limit 0,5
	</select>
	
	<select id="getCafeMemberCount" resultType="String" parameterType="HashMap">
		select count(cfm.`no`) as memberCount from cafe_members cfm
			left outer join cafe_master cm on cfm.cafeNo=cm.cafeNo
		where cm.cafeID=#{cafeID}
	</select>
	
	<select id="getCafeBoardList" resultType="HashMap" parameterType="HashMap">
		select bm.* from cafe_board_master bm
			left outer join cafe_master cm on cm.cafeNo=bm.cafeNo
		where cm.cafeID=#{cafeID}
	</select>
	
	<select id="getCafeBoardInfo" resultType="HashMap" parameterType="HashMap">
		select bm.* from cafe_board_master bm
		where bm.boardNo = #{boardNo}
	</select>
	
	<select id="getBoardPostList" resultType="HashMap" parameterType="HashMap">
		select bpm.postNo, bpm.title, bpm.boardNo, bpm.userID, ifnull(bpm.readCount,0) as readCount, bpm.noticeYN, 
			ifnull(bpm.replyCount,0) as replyCount, bm.boardName, u.userName, bpm.createdDate
		from cafe_board_post_master bpm
			left outer join cafe_board_master bm on bpm.boardNo=bm.boardNo
			left outer join user u on u.userID = bpm.userID
		where bm.boardNo = #{boardNo}
	</select>
	
	<select id="getCafeBoardPostInfo" resultType="HashMap" parameterType="HashMap">
		select bpm.title, bpm.boardNo, bpm.userID, ifnull(bpm.readCount,0) as readCount, bpm.noticeYN, bpm.postNo,
			ifnull(bpm.replyCount,0) as replyCount, bpm.createdDate
		from cafe_board_post_master bpm
		where bpm.postNo=#{postNo}
	</select>
	
	<select id="getCafeBoardPostContent" resultType="HashMap" parameterType="HashMap">
		select ifnull(cd.content,'') as content, cd.type, 
			concat( ifnull(ci.url1,''), ifnull(ci.url2,'') ) as imageURL 
		from cafe_board_post_detail cd
			left outer join cafe_image ci on ci.imageNo = cd.imageNo
		where postNo = #{postNo}
		order by seq
	</select>
	
	<select id="getCafeBoardPostReplyList" resultType="HashMap" parameterType="HashMap">
		select cpr.*, u.userName from cafe_board_post_reply cpr
			left outer join user u on cpr.userID = u.userID
		where cpr.postNo=#{postNo} and cpr.deletedDate is null
		limit #{startIndex},#{showCount};
	</select>
	
	<select id="getCafeBoardPostImageList" resultType="HashMap" parameterType="HashMap">
		select cm.*, u.userName, bm.boardName, concat( ifnull(ci.url1,'') , ifnull(ci.url2,'') ) as imageURL 
		from cafe_board_post_master cm
			left outer join ( 
				select postNo, imageNo from cafe_board_post_detail where type = 2 
				group by postNo
			) cd on cm.postNo = cd.postNo
			left outer join cafe_image ci on ci.imageNo = cd.imageNo
			left outer join user u on cm.userID = u.userID
			left outer join cafe_board_master bm on bm.boardNo = cm.boardNo
			left outer join cafe_master cfm on cfm.cafeNo = bm.cafeNo
		where cd.imageNo is not null
		and cfm.cafeID=#{cafeID}
		<if test="boardNo != null and boardNo != ''">
			and bm.boardNo=#{boardNo}
		</if>
		order by cm.createdDate desc
		limit #{startIndex},#{showCount};
	</select>
	
	<select id="getCafeBoardPostImageCount" resultType="Integer" parameterType="HashMap">
		select count(cm.postNo) as totalCount from cafe_board_post_master cm
			left outer join ( 
				select postNo, imageNo from cafe_board_post_detail where type = 2 
				group by postNo
			) cd on cm.postNo = cd.postNo
			left outer join cafe_image ci on ci.imageNo = cd.imageNo
			left outer join user u on cm.userID = u.userID
			left outer join cafe_board_master bm on bm.boardNo = cm.boardNo
			left outer join cafe_master cfm on cfm.cafeNo = bm.cafeNo
		where cd.imageNo is not null
		and cfm.cafeID=#{cafeID}
		<if test="boardNo != null and boardNo != ''">
			and bm.boardNo=#{boardNo}
		</if>
	</select>
	
	<insert id="insertCafeMeeting" parameterType="Hashmap">
		insert into cafe_public_meeting_members(meetingNo, userID, createdDate)
		values(#{meetingNo}, #{userID}, NOW());
	</insert>
	
	<delete id="deleteCafeMeeting" parameterType="Hashmap">
		delete from cafe_public_meeting_members
		where meetingNo=#{meetingNo} and userID=#{userID};
	</delete>
	
</mapper>